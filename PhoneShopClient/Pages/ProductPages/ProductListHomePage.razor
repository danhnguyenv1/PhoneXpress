@page "/products"
@page "/products/{id:int}"
@implements IDisposable


<div class="container-fluid">
	<div class="row">
		<div class="col-lg-2">
			<CategoriesPage CategoryClickedEvent="CategoryClickedEvent" DefaultCategoryClickedEvent="DefaultCategoryClickedEvent" />
		</div>
		<div class="col-lg-10">
			<BannerPage />
			<div class="card border-0">
				<div class="card-header border-success-subtle mb-2"></div>
				@if (ShowProductList)
				{
					<ProductListPage AllProducts="ProductService.ProductsByCategory?? ProductService.AllProducts" HandleProductDetailsEvent="HandleProductDetailsEvent" />
				}
				@if (ShowProductDetails)
				{
					<ProductDetails HandleBackClickedEvent="HandleBackClickedEvent" Product="ProductDetails"></ProductDetails>
				}
			</div>

		</div>
	</div>
</div>

@code {
	[Parameter]
	public int Id { get; set; } = 0;
	public bool ShowProductList { get; set; } = true;
	public bool ShowProductDetails { get; set; } = false;
	public Product ProductDetails { get; set; } = new();
	protected async override Task OnInitializedAsync()
	{
		await LoadData();
		ProductService.ProductAction += StateHasChanged;
	}
	private async void CategoryClickedEvent(int categoryId)
	{
		if (categoryId == 0)
			return;
		await ProductService.GetProductsByCategory(categoryId);
	}

	async Task DefaultCategoryClickedEvent()
	{
		ProductService.ProductsByCategory = null!;
		await LoadData();
	}

	async Task LoadData()
	{
		bool featured = false;
		await ProductService.GetAllProducts(featured);
	}

	void HandleBackClickedEvent()
	{
		ShowProductDetails = false;
		ShowProductList = true;
	}

	void HandleProductDetailsEvent(Product viewProduct)
	{
		ProductDetails = viewProduct;
		ShowProductDetails = true;
		ShowProductList = false;
	}

	protected override void OnParametersSet()
	{
		if (Id > 0)
		{
			ProductDetails = ProductService.AllProducts.FirstOrDefault(_ => _.Id == Id)!;
			ShowProductDetails = true;
			ShowProductList = false;
		}
	}

	public void Dispose()
	{
		CategoryService.CategoryAction -= StateHasChanged;
	}
}